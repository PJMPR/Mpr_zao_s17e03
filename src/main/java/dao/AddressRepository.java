package dao;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;


import domain.Address;

public class AddressRepository {
	private String url = "jdbc:hsqldb:hsql://localhost/workdb";
	private Connection connection;
	private Statement createTable;
	private PreparedStatement selectById;
	private PreparedStatement delete;
	private PreparedStatement selectAll;
	private PreparedStatement insert;
	
	private String insertSql ="INSERT INTO Address (city, street, house_number) VALUES(?,?,?)";
	
	private String deleteSql = "DELETE FROM Address WHERE id=?";
	
	private String selectAllSql = "SELECT * FROM Address"; 
	private String selectByIdSql = "SELECT * FROM Address"
			+ " WHERE id = ?"; 
			
	private String createTableSql = (
        "CREATE TABLE Address(" +
            "id BIGINT GENERATED BY DEFAULT AS IDENTITY," +
            "city VARCHAR(200)," +
            "street VARCHAR(255)," +
            "house_number INT" +
        ")"
    );
	
	public AddressRepository() {
		try {
			connection = DriverManager.getConnection(url);
			createTable = connection.createStatement();

			boolean tableExists = false;
			ResultSet rs = connection.getMetaData().getTables(null, null, null, null);
			while(rs.next()){
				if("Address".equalsIgnoreCase(rs.getString("TABLE_NAME"))){
					tableExists=true;
					break;
				}
			}
			
			if(!tableExists)
				createTable.executeUpdate(createTableSql);
			insert = connection.prepareStatement(insertSql);
			selectById = connection.prepareStatement(selectByIdSql);
			delete = connection.prepareStatement(deleteSql);
			selectAll = connection.prepareStatement(selectAllSql);
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}
	
	public Address get(int id){
		Address result = null;
		try{
			selectById.setInt(1, id);
			ResultSet rs = selectById.executeQuery();
			while(rs.next()){
				result = new Address();
				result.setCity(rs.getString("city"));
				result.setStreet(rs.getString("street"));
				result.setHouseNumber(rs.getInt("house_number"));
				return result;
			}
		}catch(SQLException ex){
			ex.printStackTrace();
		}
		return null;
	}
	
	public List<Address> getAll(){
		List<Address> result = null;
		try{
			
			ResultSet rs = selectAll.executeQuery();
			result = new ArrayList<Address>();
			while(rs.next()){
				Address p = new Address();
				
				p.setCity(rs.getString("city"));
				p.setStreet(rs.getString("street"));
				p.setHouseNumber(rs.getInt("house_number"));
				result.add(p);
			}
		}catch(SQLException ex){
			ex.printStackTrace();
		}
		return result;
	}
	
//	public void delete(Address p){
//		try{
//			
//			delete.setInt(1, p.getId());
//			delete.executeUpdate();
//			
//		}catch(SQLException ex){
//			ex.printStackTrace();
//		}
//	}
	
	public void add(Address address){
		try{
		insert.setString(1, address.getCity());
		insert.setString(2, address.getStreet());
		insert.setInt(3, address.getHouseNumber());
		insert.executeUpdate();
		}catch(SQLException ex){
			ex.printStackTrace();
		}
	}
}
