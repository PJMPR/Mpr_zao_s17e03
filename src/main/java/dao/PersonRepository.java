package dao;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import dao.mappers.IMapResultSetToEntity;
import domain.Person;

public class PersonRepository extends RepositoryBase<Person>{
	IMapResultSetToEntity<Person> mapper;
	
	public PersonRepository(Connection connection, 
			IMapResultSetToEntity<Person> mapper){
		super(connection,mapper);
	}
	
	
	public void delete(Person p){
		try{
			
			delete.setInt(1, p.getId());
			delete.executeUpdate();
			
		}catch(SQLException ex){
			ex.printStackTrace();
		}
	}
	
	public void add(Person person){
		try{
		insert.setString(1, person.getName());
		insert.setString(2, person.getSurname());
		insert.setInt(3, person.getAge());
		insert.executeUpdate();
		}catch(SQLException ex){
			ex.printStackTrace();
		}
	}
	@Override
	protected String getTableName() {
		return "Person";
	}
	@Override
	protected String getCreateTableQuery() {
		return "CREATE TABLE Person("
				+ "id BIGINT GENERATED BY DEFAULT AS IDENTITY,"
				+ "name VARCHAR(20),"
				+ "surname VARCHAR(50),"
				+ "age INT"
				+ ")";
	}
	@Override
	protected String getInsertQuery() {
		return "INSERT INTO Person (name, surname, age) VALUES(?,?,?)";
		
	}
	@Override
	protected String getDeleteQuery() {
		return "DELETE FROM Person WHERE id=?";
	}
	@Override
	protected String getSelectByIdQuery() {
		return "SELECT * FROM Person"
				+ " WHERE id = ?"; 
	}
	@Override
	protected String getSelectAllQuery() {
		return "SELECT * FROM Person";
	}
	
}
