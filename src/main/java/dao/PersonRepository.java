package dao;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import dao.mappers.IMapResultSetToEntity;
import dao.uow.IUnitOfWork;
import domain.Entity;
import domain.Person;

public class PersonRepository extends RepositoryBase<Person>{
	IMapResultSetToEntity<Person> mapper;
	
	public PersonRepository(Connection connection, 
			IMapResultSetToEntity<Person> mapper,
			IUnitOfWork uow){
		super(connection,mapper,uow);
	}
	
	protected void setUpInsert(Entity entity) throws SQLException {
		Person person = (Person)entity;
		insert.setString(1, person.getName());
		insert.setString(2, person.getSurname());
		insert.setInt(3, person.getAge());
	}
	
	protected void setUpUpdate(Entity entity) throws SQLException {
		Person p = (Person)entity;
		update.setString(1, p.getName());
		update.setString(2, p.getSurname());
		update.setInt(3, p.getAge());
		update.setInt(4, p.getId());
	}
	
	
	@Override
	protected String getTableName() {
		return "Person";
	}
	@Override
	protected String getCreateTableQuery() {
		return "CREATE TABLE Person("
				+ "id BIGINT GENERATED BY DEFAULT AS IDENTITY,"
				+ "name VARCHAR(20),"
				+ "surname VARCHAR(50),"
				+ "age INT"
				+ ")";
	}
	@Override
	protected String getInsertQuery() {
		return "INSERT INTO Person (name, surname, age) VALUES(?,?,?)";
		
	}
	
	protected String getUpdateQuery(){
		return "UPDATE person SET (name,surname,age)=(?,?,?) WHERE id=?";
	}

	
}
